{"version":3,"sources":["components/Timer.jsx","components/ControlButtons.jsx","App.js","index.js"],"names":["addZero","date","Timer","props","hours","time","minutes","seconds","className","ControlButtons","useEffect","clicks$","fromEvent","document","getElementById","subscription","pipe","buffer","throttleTime","asyncScheduler","trailing","filter","clickArray","length","subscribe","val","onClickWait","unsubscribe","onClick","onClickActionStart","onClickActionStop","id","onClickReset","App","handleActionStart","console","log","source","addSeconds","handleActionStop","clearTimerId","clearTime","handleActionWait","handleActionReset","setTimeout","state","timerId","interval","this","setState","React","Component","ReactDOM","render","StrictMode"],"mappings":"oSAoBA,SAASA,EAAQC,GACb,OAAOA,EAAO,GAAK,IAAMA,EAAOA,EAGrBC,MAtBD,SAACC,GACX,IAAIC,EAAQJ,EAAQG,EAAME,KAAKD,OAC3BE,EAAUN,EAAQG,EAAME,KAAKC,SAC7BC,EAAUP,EAAQG,EAAME,KAAKE,SAGjC,OAAO,gCACH,0CACA,sBAAKC,UAAU,QAAf,UACI,qCAAQJ,EAAR,OACA,qCACA,qCAASE,EAAT,OACA,qCACA,qCAASC,EAAT,c,gDCuBGE,EAhCQ,SAACN,GAkBpB,OAhBAO,qBAAU,WACN,IAIMC,EAAUC,YAAUC,SAASC,eAAe,YAAa,SAEzDC,EAAeJ,EAAQK,KACzBC,YAAON,EAAQK,KAAKE,YAAa,IAAKC,IAAgB,CAAEC,UAAU,MAElEC,aAAO,SAAAC,GAAU,OAA0B,IAAtBA,EAAWC,WAClCC,WAVmB,SAACC,GAClBtB,EAAMuB,iBAWV,OAAO,kBAAMX,EAAaY,kBAGvB,sBAAKnB,UAAU,iBAAf,UACH,+CAEA,wBAAQA,UAAU,MAAMoB,QAASzB,EAAM0B,mBAAvC,mBAEA,wBAAQrB,UAAU,MAAMoB,QAASzB,EAAM2B,kBAAvC,kBAEA,wBAAQtB,UAAU,MAAMuB,GAAG,WAA3B,kBAEA,wBAAQvB,UAAU,MAAMoB,QAASzB,EAAM6B,aAAvC,uB,QCkFOC,E,kDA5Gb,WAAY9B,GAAQ,IAAD,8BACjB,cAAMA,IAoCR+B,kBAAoB,WAEb,EAAKV,UAMRW,QAAQC,IAAI,gCALZD,QAAQC,IAAI,eAEZ,EAAKZ,UAAY,EAAKa,OAAOb,WAAU,SAAAC,GAAG,OAAI,EAAKa,kBA1CpC,EAiDnBC,iBAAmB,WACjB,EAAKC,eACL,EAAKC,aAnDY,EAuDnBC,iBAAmB,WACjBP,QAAQC,IAAI,QACZ,EAAKI,gBAzDY,EA6DnBG,kBAAoB,WAClB,EAAKJ,mBACLK,YAAW,kBAAM,EAAKV,sBAAqB,IA5D3C,EAAKW,MAAQ,CACXzC,MAAO,EACPE,QAAS,EACTC,QAAS,EACTuC,QAAS,MAEX,EAAKT,OAASU,YAAS,KACvB,EAAKvB,UAAY,KAVA,E,8CAenB,WACE,IAAIjB,GAAWyC,KAAKH,MAAMtC,QACtBD,GAAW0C,KAAKH,MAAMvC,QACtBF,GAAS4C,KAAKH,MAAMzC,MAGpBE,GAAW,IAAMC,GAAW,GAC9ByC,KAAKC,SAAS,CACZ7C,MAAOA,EAAQ,EACfE,QAAS,EACTC,QAAS,IAEFA,GAAW,GACpByC,KAAKC,SAAS,CACZ3C,QAASA,EAAU,EACnBC,QAAS,IAGXyC,KAAKC,SAAS,CAAE1C,QAASA,EAAU,M,uBAkCvC,WACEyC,KAAKC,SAAS,CACZ7C,MAAO,EACPE,QAAS,EACTC,QAAS,M,0BAIb,WAEMyC,KAAKxB,YACPwB,KAAKxB,UAAUG,cACfqB,KAAKxB,UAAY,Q,oBAMrB,WACE,OAAO,8BACL,0BAAShB,UAAU,oBAAnB,UAEE,yDACA,cAAC,EAAD,CAAOH,KAAM2C,KAAKH,QAClB,cAAC,EAAD,CAEEhB,mBAAoBmB,KAAKd,kBACzBJ,kBAAmBkB,KAAKT,iBAExBb,YAAasB,KAAKN,iBAClBV,aAAcgB,KAAKL,6B,GAlGXO,IAAMC,WCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzC,SAASC,eAAe,W","file":"static/js/main.aee4e5da.chunk.js","sourcesContent":["import './timer.css';\r\n\r\nconst Timer = (props) => {\r\n    let hours = addZero(props.time.hours);\r\n    let minutes = addZero(props.time.minutes);\r\n    let seconds = addZero(props.time.seconds);\r\n\r\n\r\n    return <div >\r\n        <h3>Time is:</h3>\r\n        <div className=\"timer\">\r\n            <span> {hours} </span>\r\n            <span>:</span>\r\n            <span > {minutes} </span>\r\n            <span>:</span>\r\n            <span > {seconds} </span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nfunction addZero(date) {\r\n    return date < 10 ? \"0\" + date : date;\r\n}\r\n\r\nexport default Timer;","import './controlButtons.css';\r\nimport { useEffect } from 'react';\r\nimport { fromEvent, asyncScheduler } from 'rxjs';\r\nimport { buffer, filter, throttleTime, } from 'rxjs/operators';\r\n\r\n\r\nconst ControlButtons = (props) => {\r\n\r\n    useEffect(() => {\r\n        const handleResize = (val) => {\r\n            props.onClickWait();\r\n        }\r\n\r\n        const clicks$ = fromEvent(document.getElementById(\"btn_wait\"), 'click');\r\n\r\n        const subscription = clicks$.pipe(\r\n            buffer(clicks$.pipe(throttleTime(299, asyncScheduler, { trailing: true }))),\r\n            // if array is greater than 1, double click occured\r\n            filter(clickArray => clickArray.length === 2)\r\n        ).subscribe(handleResize);\r\n\r\n        return () => subscription.unsubscribe();\r\n    })\r\n\r\n    return <div className=\"controlButtons\">\r\n        <h3>Control Panel</h3>\r\n\r\n        <button className=\"btn\" onClick={props.onClickActionStart}>Start</button>\r\n\r\n        <button className=\"btn\" onClick={props.onClickActionStop}>Stop</button>\r\n\r\n        <button className=\"btn\" id=\"btn_wait\" >Wait</button>\r\n\r\n        <button className=\"btn\" onClick={props.onClickReset}>Reset</button>\r\n    </div>\r\n\r\n}\r\n\r\nexport default ControlButtons;","import './App.css';\nimport React from 'react';\nimport Timer from './components/Timer';\nimport ControlButtons from './components/ControlButtons';\nimport { interval } from 'rxjs';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      timerId: null,\n    };\n    this.source = interval(1000);\n    this.subscribe = null;\n\n  }\n\n\n  addSeconds() {\n    let seconds = +this.state.seconds;\n    let minutes = +this.state.minutes;\n    let hours = +this.state.hours;\n\n\n    if (minutes >= 59 && seconds >= 59) {\n      this.setState({\n        hours: hours + 1,\n        minutes: 0,\n        seconds: 0\n      });\n    } else if (seconds >= 59) {\n      this.setState({\n        minutes: minutes + 1,\n        seconds: 0\n      });\n    } else {\n      this.setState({ seconds: seconds + 1 });\n    }\n  }\n\n  handleActionStart = () => {\n\n    if (!this.subscribe) {\n      console.log(\"Start Timer\");\n\n      this.subscribe = this.source.subscribe(val => this.addSeconds());\n\n    } else {\n      console.log(\"Error - Timer Already Start\");\n    }\n  }\n\n  handleActionStop = () => {\n    this.clearTimerId();\n    this.clearTime();\n\n  }\n\n  handleActionWait = () => {\n    console.log(\"WAIT\")\n    this.clearTimerId();\n\n  }\n\n  handleActionReset = () => {\n    this.handleActionStop();\n    setTimeout(() => this.handleActionStart(), 0)\n\n  }\n\n  clearTime() {\n    this.setState({\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n    })\n  }\n\n  clearTimerId() {\n\n    if (this.subscribe) {\n      this.subscribe.unsubscribe();\n      this.subscribe = null;\n    }\n\n  }\n\n\n  render() {\n    return <div>\n      <section className=\"section_app_react\">\n\n        <h1>Stopwatch - React, RxJS</h1>\n        <Timer time={this.state} />\n        <ControlButtons\n\n          onClickActionStart={this.handleActionStart}\n          onClickActionStop={this.handleActionStop}\n\n          onClickWait={this.handleActionWait}\n          onClickReset={this.handleActionReset}\n        />\n\n      </section>\n\n    </div>\n  }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}